#update2
name: Node.js CI

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
      - run: yarn prisma migrate dev
      - run: yarn prisma db seed
      - run: yarn prisma generate
      - run: yarn build

      - name: ssh deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            source ~/.nvm/nvm.sh; npm install pm2 -g
            source ~/.nvm/nvm.sh; npm install yarn -g
            source ~/.nvm/nvm.sh; cd deploy && yarn;
            pm2 delete biblioteca
            pm2 start ~/deploy/dist/server.js --name="biblioteca"  --env=../../env
        # uses: easingthemes/ssh-deploy@v4.1.8
        # env:
        #   SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        #   REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        #   REMOTE_USER: ${{ secrets.USERNAME }}
        #   TARGET: ${{ secrets.TARGET_DIR }}
        #   EXCLUDE: '.git/, /node_modules/'
        #   SCRIPT_BEFORE: |
        #     source ~/.nvm/nvm.sh; npm install pm2 -g
        #     source ~/.nvm/nvm.sh; npm install yarn -g
        #   SCRIPT_AFTER: |
        #     source ~/.nvm/nvm.sh; cd deploy && yarn;
        #     pm2 delete biblioteca
        #     pm2 start ~/deploy/dist/server.js --name="biblioteca"  --env=../../env
